<?xml version="1.0" encoding="UTF-8" standalone="no"?>

 <!--
   Copyright 2011, Big Switch Networks, Inc.
   
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<project default="dist" name="Floodlight">
    <property name="target" location="target"/>
    <property name="build" location="${target}/bin"/>
    <property name="build-test" location="${target}/bin-test"/>
    <property name="build-coverage" location="${target}/bin-coverage"/>
    <property name="test-output" location="${target}/test"/>
    <property name="coverage-output" location="${target}/coverage"/>
    <property name="source" location="src/main/java"/>
    <property name="resources" location="src/main/resources/"/>
    <property name="source-test" location="src/test/java"/>
    <property name="python-src" location="src/main/python"/>
    <property name="docs" location="${target}/docs"/>
    <property name="main-class" value="net.floodlightcontroller.core.Main"/>
    <property name="packetstreamer-gen" location="lib/gen-java" />
    <property name="packetstreamer-gen-build" location="lib/gen-java-bin"/>
    <property name="packetstreamer-thrift-jar" value="packetstreamer-thrift.jar"/>
    <property name="floodlight-nodeps-jar" location="${target}/floodlight-nodeps.jar"/>
    <property name="floodlight-debian-jar" location="${target}/floodlight-debian.jar"/>
    <property name="floodlight-jar" location="${target}/floodlight.jar"/>
    <property name="floodlight-test-jar" location="${target}/floodlight-test.jar"/>

    <patternset id="lib">
        <include name="logback-classic-1.0.0.jar"/>
        <include name="logback-core-1.0.0.jar"/>
        <include name="jackson-core-asl-1.8.6.jar"/>
        <include name="jackson-mapper-asl-1.8.6.jar"/>
        <include name="org.easymock_2.5.2.jar"/>
        <include name="slf4j-api-1.6.4.jar"/>
        <include name="org.restlet-2.1-RC1.jar"/>
        <include name="org.restlet.ext.jackson-2.1-RC1.jar"/>
        <include name="org.restlet.ext.simple-2.1-RC1.jar"/>
        <include name="org.restlet.ext.slf4j-2.1-RC1.jar"/>
        <include name="simple-4.1.21.jar"/>
        <include name="netty-3.2.6.Final.jar"/>
        <include name="args4j-2.0.16.jar"/>
        <include name="concurrentlinkedhashmap-lru-1.2.jar"/>
        <include name="jython-2.5.2.jar"/>
        <include name="libthrift-0.7.0.jar"/>
    </patternset>
    <!-- Dependencies we can't get from Debian/Ubuntu. -->
    <patternset id="debian-lib">
        <include name="org.restlet-2.1-RC1.jar"/>
        <include name="org.restlet.ext.jackson-2.1-RC1.jar"/>
        <include name="org.restlet.ext.simple-2.1-RC1.jar"/>
        <include name="org.restlet.ext.slf4j-2.1-RC1.jar"/>
        <include name="libthrift-0.7.0.jar"/>
        <include name="simple-4.1.21.jar"/>
    </patternset>
    <patternset id="genlib">
        <include name="${packetstreamer-thrift-jar}"/>
    </patternset>

    <path id="classpath">
        <fileset dir="lib">
            <patternset refid="lib"/>
        </fileset>
        <fileset dir="${target}/lib">
            <patternset refid="genlib"/>
        </fileset>
    </path>

    <patternset id="lib-cobertura">
        <include name="cobertura-1.9.4.1.jar"/>
        <include name="asm-3.0.jar"/>
        <include name="asm-tree-3.0.jar"/>
        <include name="oro/jakarta-oro-2.0.8.jar"/>
        <include name="log4j-1.2.9.jar"/>
    </patternset>
    <path id="classpath-cobertura">
        <fileset dir="lib">
            <patternset refid="lib-cobertura"/>
	</fileset>
    </path>

    <patternset id="lib-test">
        <include name="junit-4.8.2.jar"/>
        <include name="org.easymock_2.5.2.jar"/>
    </patternset>
    <path id="classpath-test">
        <fileset dir="lib">
            <patternset refid="lib-test"/>
            <patternset refid="lib-cobertura"/>
            <patternset refid="lib"/>
        </fileset>
        <fileset dir="${target}/lib">
            <patternset refid="genlib"/>
        </fileset>
    </path>

    <target name="init">
        <mkdir dir="${build}"/>
        <mkdir dir="${build-test}"/>
        <mkdir dir="${target}/lib"/>
        <mkdir dir="${packetstreamer-gen-build}"/>
        <mkdir dir="${test-output}"/>
    </target>

    <target name="compile" depends="init,packetstreamer-thrift">
        <javac includeAntRuntime="false" 
	       classpathref="classpath" 
	       debug="true" 
	       srcdir="${source}:${packetstreamer-gen}"
	       destdir="${build}">
        </javac>
    </target>

    <target name="compile-tests" depends="compile-test"/>
    <target name="compile-test" depends="compile">
    	<fileset dir="${resources}"/>
        <javac includeAntRuntime="false" debug="true" 
	       srcdir="${source-test}"
	       classpath="${build}"
	       classpathref="classpath-test"
	       destdir="${build-test}"/>
    </target>

    <target name="compile-thrift" depends="init">
        <javac srcdir="${packetstreamer-gen}" 
	       includeantruntime="false" 
	       destdir="${packetstreamer-gen-build}"
	       debug="true" debuglevel="lines,vars,source"
	       classpathref="classpath" />
    </target>
    <target name="packetstreamer-thrift" depends="compile-thrift">
        <jar jarfile="${target}/lib/${packetstreamer-thrift-jar}"
	     basedir="${packetstreamer-gen-build}"/>
    </target>

    <target name="clean">
        <delete dir="${target}"/>
        <delete dir="${packetstreamer-gen-build}"/>
        <delete file="${target}/lib/${packetstreamer-thrift-jar}"/>
    </target>

    <target name="run" depends="dist">
        <java fork="true" jar="${floodlight-jar}" classpathref="classpath">
            <jvmarg value="-server"/>
            <jvmarg value="-Xms1024M"/>
            <jvmarg value="-Xmx1024M"/>
        </java>
    </target>

    <target name="tests" depends="test"/>
    <target name="test" depends="compile-test">
        <junit fork="true" forkmode="once"
	       failureproperty="junit.failure"
	       printsummary="on">
  	    <sysproperty key="net.sourceforge.cobertura.datafile"
			 file="${target}/cobertura.ser" />
            <classpath>
                <pathelement location="${build-coverage}"/>
                <pathelement location="${build}"/>
                <pathelement location="${build-test}"/>
                <path refid="classpath-test"/>
            </classpath>
            <formatter type="brief" usefile="true" />
            <batchtest todir="${test-output}">
                <fileset dir="${source-test}">
                    <exclude name="**/storage/tests/StorageTest.java"/>
                    <exclude name="**/test/Mock*"/>
                </fileset>
            </batchtest>
        </junit>
        <fail if="junit.failure" message="Unit test(s) failed.  See reports!"/>
    </target>

    <taskdef classpathref="classpath-cobertura" resource="tasks.properties"/>
    <target name="clean-instrument">
        <delete file="${target}/cobertura.ser"/>
        <delete dir="${build-coverage}"/>
    </target>
    <target name="instrument" depends="compile,compile-test,clean-instrument">
      <cobertura-instrument datafile="${target}/cobertura.ser"
			    todir="${build-coverage}"
			    classpathref="classpath-cobertura">
	<fileset dir="${build}">
	  <include name="**/*.class"/>
	</fileset>
      </cobertura-instrument>
    </target>
    <target name="coverage-report">
        <cobertura-report format="html"
			  datafile="${target}/cobertura.ser"
			  destdir="${coverage-output}"
			  srcdir="${source}"/>
        <cobertura-report format="xml"
			  datafile="${target}/cobertura.ser"
			  destdir="${coverage-output}"
			  srcdir="${source}"/>
    </target>
    <target name="coverage" depends="instrument,test,coverage-report"/>

    <target name="dist" depends="compile,compile-test">
        <jar destfile="${floodlight-nodeps-jar}" filesetmanifest="mergewithoutmain">
            <manifest>
                <attribute name="Main-Class" value="${main-class}"/>
                <attribute name="Class-Path" value="."/>
            </manifest>
            <fileset dir="${build}"/>
        	<fileset dir="${resources}"/>
            <fileset dir="${python-src}">
                <include name="**/*.py"/>
            </fileset>
            <zipgroupfileset dir="${target}/lib">
                <patternset refid="genlib"/>
            </zipgroupfileset>
        </jar>
        <jar destfile="${floodlight-jar}">
            <manifest>
                <attribute name="Main-Class" value="${main-class}"/>
                <attribute name="Class-Path" value="."/>
            </manifest>
            <zipgroupfileset dir="lib">
                <patternset refid="lib"/>
            </zipgroupfileset>
            <zipfileset src="${floodlight-nodeps-jar}"/>
        </jar>
        <jar destfile="${floodlight-debian-jar}">
            <manifest>
                <attribute name="Main-Class" value="${main-class}"/>
                <!-- JARs under /usr/share/java on Debian/Ubuntu -->
                <attribute name="Class-Path" value="args4j.jar slf4j-api.jar logback-core.jar logback-classic.jar jackson-core-asl.jar jackson-mapper-asl.jar easymock.jar netty.jar concurrentlinkedhashmap-lru.jar jython.jar antlr3-runtime.jar asm3.jar asm3-tree.jar ."/>
            </manifest>
            <zipgroupfileset dir="lib">
                <patternset refid="debian-lib"/>
            </zipgroupfileset>
            <zipfileset src="${floodlight-nodeps-jar}"/>
        </jar>
        <jar destfile="${floodlight-test-jar}" filesetmanifest="mergewithoutmain">
            <manifest>
                <attribute name="Class-Path" value="."/>
            </manifest>
            <fileset dir="${build-test}"/>
        	<fileset dir="${resources}"/>
            <zipgroupfileset dir="lib">
                <patternset refid="lib-test"/>
                <patternset refid="lib-cobertura"/>
            </zipgroupfileset>
            <zipgroupfileset dir="${target}/lib">
                <patternset refid="genlib"/>
            </zipgroupfileset>
        </jar>
    </target>

    <target name="javadoc">
        <javadoc access="protected"
            author="true"
            classpathref="classpath"
            destdir="${docs}"
            doctitle="Floodlight"
            nodeprecated="false"
            nodeprecatedlist="false"
            noindex="false"
            nonavbar="false"
            notree="false"
            source="1.6"
            sourcepath="${source}"
            splitindex="true"
            use="true"
            version="true"/>
    </target>

    <target name="eclipse" depends="init,packetstreamer-thrift">
        <pathconvert property="lib">
            <map from="${basedir}/" to=""/>
            <fileset dir="lib">
                <patternset refid="lib"/>
                <patternset refid="lib-test"/>
            </fileset>
            <fileset dir="${target}/lib">
                <patternset refid="genlib"/>
            </fileset>
        </pathconvert>
        <exec executable="${basedir}/setup-eclipse.sh">
            <arg value="${main-class}"/>
            <arg value="${lib}"/>
        </exec>
    </target>

</project>
